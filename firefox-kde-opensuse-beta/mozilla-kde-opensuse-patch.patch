--- mozilla-kde.patch
+++ mozilla-kde.patch
@@ -9,12 +9,7 @@
 diff --git a/modules/libpref/Preferences.cpp b/modules/libpref/Preferences.cpp
 --- a/modules/libpref/Preferences.cpp
 +++ b/modules/libpref/Preferences.cpp
-@@ -33,16 +33,17 @@
- #include "nsIZipReader.h"
- #include "nsPrefBranch.h"
- #include "nsXPIDLString.h"
- #include "nsCRT.h"
- #include "nsCOMArray.h"
+@@ -42,6 +42,7 @@
  #include "nsXPCOMCID.h"
  #include "nsAutoPtr.h"
  #include "nsPrintfCString.h"
@@ -23,10 +18,6 @@
  #include "nsQuickSort.h"
  #include "PLDHashTable.h"
  
- #include "prefapi.h"
- #include "prefread.h"
- #include "prefapi_private_data.h"
- 
 @@ -1435,16 +1436,34 @@ pref_LoadPrefsInDir(nsIFile* aDir, char 
  
  static nsresult pref_LoadPrefsInDirList(const char *listId)
@@ -166,7 +157,7 @@
 diff --git a/python/mozbuild/mozpack/chrome/manifest.py b/python/mozbuild/mozpack/chrome/manifest.py
 --- a/python/mozbuild/mozpack/chrome/manifest.py
 +++ b/python/mozbuild/mozpack/chrome/manifest.py
-@@ -33,16 +33,17 @@ class ManifestEntry(object):
+@@ -33,17 +33,18 @@ class ManifestEntry(object):
          'application',
          'platformversion',
          'os',
@@ -175,6 +166,7 @@
          'xpcnativewrappers',
          'tablet',
          'process',
+         'contentaccessible',
 +        'desktop',
      ]
  
@@ -1083,7 +1075,7 @@
 +              return fontEnumerator.getStandardFamilyName(family);
 +            case "file":
 +              var f = this._branch
-+                          .getComplexValue(this.name, Components.interfaces.nsILocalFile);
++                          .getComplexValue(this.name, Components.interfaces.nsIFile);
 +              return f;
 +            default:
 +              this._reportUnknownType();
@@ -1128,14 +1120,14 @@
 +            var lf;
 +            if (typeof(val) == "string") {
 +              lf = Components.classes["@mozilla.org/file/local;1"]
-+                             .createInstance(Components.interfaces.nsILocalFile);
++                             .createInstance(Components.interfaces.nsIFile);
 +              lf.persistentDescriptor = val;
 +              if (!lf.exists())
 +                lf.initWithPath(val);
 +            } else
-+              lf = val.QueryInterface(Components.interfaces.nsILocalFile);
++              lf = val.QueryInterface(Components.interfaces.nsIFile);
 +            this.preferences.rootBranch
-+                .setComplexValue(this.name, Components.interfaces.nsILocalFile, lf);
++                .setComplexValue(this.name, Components.interfaces.nsIFile, lf);
 +            break;
 +          default:
 +            this._reportUnknownType();
@@ -2893,7 +2885,7 @@
 +#include "prlink.h"
 +#include "prmem.h"
 +#include "nsString.h"
-+#include "nsILocalFile.h"
++#include "nsIFile.h"
 +#include "nsMIMEInfoUnix.h"
 +#include "nsAutoPtr.h"
 +#include "nsKDEUtils.h"
@@ -2976,7 +2968,7 @@
 new file mode 100644
 --- /dev/null
 +++ b/uriloader/exthandler/unix/nsKDERegistry.h
-@@ -0,0 +1,34 @@
+@@ -0,0 +1,32 @@
 +/* This Source Code Form is subject to the terms of the Mozilla Public
 + * License, v. 2.0. If a copy of the MPL was not distributed with this
 + * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
@@ -2989,8 +2981,6 @@
 +#include "nsTArray.h"
 +
 +class nsMIMEInfoBase;
-+class nsAutoCString;
-+class nsCString;
 +
 +class nsKDERegistry
 +{
@@ -3110,12 +3100,7 @@
 diff --git a/uriloader/exthandler/unix/nsOSHelperAppService.cpp b/uriloader/exthandler/unix/nsOSHelperAppService.cpp
 --- a/uriloader/exthandler/unix/nsOSHelperAppService.cpp
 +++ b/uriloader/exthandler/unix/nsOSHelperAppService.cpp
-@@ -10,17 +10,17 @@
- #if defined(MOZ_ENABLE_CONTENTACTION)
- #include <contentaction/contentaction.h>
- #include <QString>
- #endif
- 
+@@ -10,7 +10,7 @@
  #include "nsOSHelperAppService.h"
  #include "nsMIMEInfoUnix.h"
  #ifdef MOZ_WIDGET_GTK
@@ -3124,11 +3109,6 @@
  #endif
  #include "nsISupports.h"
  #include "nsString.h"
- #include "nsReadableUtils.h"
- #include "nsUnicharUtils.h"
- #include "nsXPIDLString.h"
- #include "nsIURL.h"
- #include "nsIFileStreams.h"
 @@ -1143,26 +1143,26 @@ nsresult nsOSHelperAppService::OSProtoco
      ContentAction::Action::defaultActionForScheme(QString(aProtocolScheme) + ':');
  
@@ -3200,12 +3180,12 @@
 --- a/widget/gtk/moz.build
 +++ b/widget/gtk/moz.build
 @@ -109,16 +109,17 @@ else:
- include('/ipc/chromium/chromium-config.mozbuild')
  
  FINAL_LIBRARY = 'xul'
  
  LOCAL_INCLUDES += [
      '/layout/generic',
+     '/layout/style',
      '/layout/xul',
      '/other-licenses/atk-1.0',
 +    '/toolkit/xre',
@@ -3303,7 +3283,7 @@
 +    return NS_OK;
 +  }
 +
-   nsXPIDLCString title;
+   nsCString title;
    title.Adopt(ToNewUTF8String(mTitle));
  
    GtkWindow *parent_widget =
@@ -3351,7 +3331,7 @@
 +    if( mMode == modeOpen && mFilters.Length() == 1 && mFilters[ 0 ].EqualsLiteral( "..apps" ))
 +        return kdeAppsDialog( aReturn );
 +
-+    nsXPIDLCString title;
++    nsCString title;
 +    title.Adopt(ToNewUTF8String(mTitle));
 +
 +    const char* arg = NULL;
@@ -3520,7 +3500,7 @@
 +    {
 +    NS_ENSURE_ARG_POINTER(aReturn);
 +
-+    nsXPIDLCString title;
++    nsCString title;
 +    title.Adopt(ToNewUTF8String(mTitle));
 +
 +    nsTArray<nsCString> command;
