--- ois-v1-3/configure.ac	2013-06-09 03:04:17.432058599 +0200
+++ patched/configure.ac	2013-06-09 12:55:02.232526833 +0200
@@ -4,8 +4,17 @@
 AC_INIT( [OIS], 1.3.0 )
 
 AC_CANONICAL_TARGET
-AM_INIT_AUTOMAKE( [OIS], 1.3.0 )
+AM_INIT_AUTOMAKE
 AC_CONFIG_HEADERS([includes/config.h])
+AC_CONFIG_MACRO_DIR([m4])
+
+case "$host" in
+        *-*-mingw*|*-*-cygwin*)
+                lt_cv_deplibs_check_method='pass_all'
+        ;;
+esac
+
+LT_INIT
 
 dnl Check for programs
 AC_PROG_CC
@@ -21,8 +30,35 @@
 CXXFLAGS="$CXXFLAGS"
 LIBS="$LIBS"
 
-dnl Detect X11
-AC_CHECK_HEADERS([X11/Xaw/Command.h],, [AC_MSG_ERROR("libxaw headers not found")])
+case "$host" in
+        *-*-mingw*|*-*-cygwin*)
+                AC_DEFINE(PLATFORM_WIN32, 1, [Platform is Win32])
+                AM_CONDITIONAL([PLATFORM_WIN32], [test xtest = xtest])
+                AM_CONDITIONAL([PLATFORM_LINUX], [test xno = xtest])
+                AM_CONDITIONAL([PLATFORM_APPLE], [test xno = xtest])
+                PLATFORM_STRING="Win32"
+                ;;
+        *-*-linux*)
+                AC_DEFINE(PLATFORM_LINUX, 1, [Platform is Linux])
+                PLATFORM_STRING="Linux"
+                AM_CONDITIONAL([PLATFORM_WIN32], [test xno = xtest])
+                AM_CONDITIONAL([PLATFORM_LINUX], [test xtest = xtest])
+                AM_CONDITIONAL([PLATFORM_APPLE], [test xno = xtest])
+                dnl Detect X11
+                AC_CHECK_HEADERS([X11/Xaw/Command.h],, [AC_MSG_ERROR("libxaw headers not found")])
+                ;;
+        *-*-darwin*)
+		AC_MSG_WARN([Hello])
+                AC_DEFINE(PLATFORM_APPLE, 1, [Platform is Apple])
+                PLATFORM_STRING="Apple"
+                AM_CONDITIONAL([PLATFORM_WIN32], [test xno = xtest])
+                AM_CONDITIONAL([PLATFORM_LINUX], [test xno = xtest])
+                AM_CONDITIONAL([PLATFORM_APPLE], [test xtest = xtest])
+                ;;
+        *)
+                AC_MSG_WARN([*** Please add $host to configure.ac checks!])
+                ;;
+esac
 
 dnl Added for BSD's
 AC_PROG_LIBTOOL
--- ois-v1-3/Makefile.am	2010-04-02 04:11:02.000000000 +0200
+++ patched/Makefile.am	2013-06-09 12:09:31.523770365 +0200
@@ -1,3 +1,5 @@
+ACLOCAL_AMFLAGS = -I m4
+
 SUBDIRS =  src includes demos
 
 pkgconfigdir = $(libdir)/pkgconfig
--- ois-v1-3/src/Makefile.am	2010-04-02 04:11:02.000000000 +0200
+++ patched/src/Makefile.am	2013-06-09 12:32:26.536418567 +0200
@@ -1,6 +1,6 @@
-INCLUDES = $(STLPORT_CFLAGS) -I$(top_srcdir)/includes $(CFLAGS) -I/usr/X11R6/include
-
+if PLATFORM_LINUX
 
+AM_CPPFLAGS = $(STLPORT_CFLAGS) -I$(top_srcdir)/includes $(CFLAGS) -I/usr/X11R6/include
 
 lib_LTLIBRARIES=libOIS.la
 libOIS_la_SOURCES = OISInputManager.cpp \
@@ -22,4 +22,30 @@
 
 libOIS_la_LIBADD = $(STLPORT_LIBS) -L/usr/X11R6/lib -lX11
 
+endif
+
+if PLATFORM_WIN32
+
+AM_CPPFLAGS = $(STLPORT_CFLAGS) -I$(top_srcdir)/includes $(CFLAGS) -DWIN32 -DOIS_DYNAMIC_LIB -DOIS_NONCLIENT_BUILD
+
+lib_LTLIBRARIES=libOIS.la
+libOIS_la_SOURCES = OISInputManager.cpp \
+	OISObject.cpp \
+	OISEffect.cpp \
+	OISJoyStick.cpp \
+	OISKeyboard.cpp \
+	OISForceFeedback.cpp \
+	OISException.cpp \
+	./win32/Win32InputManager.cpp \
+        ./win32/Win32JoyStick.cpp \
+        ./win32/Win32ForceFeedback.cpp \
+	./win32/Win32Keyboard.cpp \
+	./win32/Win32Mouse.cpp
+
+libOIS_la_LDFLAGS = -Wl,--enable-auto-image-base -Wl,--add-stdcall-alias -Wl,--out-implib,libOIS.dll.a -no-undefined -release @PACKAGE_VERSION@
+#libOIS_la_LDFLAGS = -version-info $(shell echo "@PACKAGE_VERSION@" | tr '.' ':')
+
+libOIS_la_LIBADD = $(STLPORT_LIBS) -ldinput8 -ldxguid -lole32 -loleaut32 -luser32
+
+endif
 #eof "$Id: Makefile.am,v 1.15.2.1 2008/02/14 03:33:36 pjcast Exp $"
