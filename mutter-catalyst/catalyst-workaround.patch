diff --git a/src/backends/x11/meta-monitor-manager-xrandr.c b/src/backends/x11/meta-monitor-manager-xrandr.c
index cc7a4440a..3bc1f0496 100644
--- a/src/backends/x11/meta-monitor-manager-xrandr.c
+++ b/src/backends/x11/meta-monitor-manager-xrandr.c
@@ -1060,6 +1060,41 @@ output_set_underscanning_xrandr (MetaMonitorManagerXrandr *manager_xrandr,
     }
 }
 
+static int
+output_get_fglrx_kernel_module_loaded()
+{
+  /* Checks if fglrx module has been loaded by parsing /proc/modules.
+   * Returns 1 if the module was found (and thus has been loaded), 0 if the
+   * module was not found and -1 if /proc/modules couldn't be opened.
+   */
+
+  int retval = 0; // defaults to not found
+  
+  FILE* fp;
+  char line[256];
+
+  fp = fopen("/proc/modules", "r");
+  if (!fp)
+    {
+      retval = -1;
+    }
+  else
+    {
+      while (fgets(line, sizeof(line), fp) != NULL)
+        {
+          char *entry = strtok(line, " \n");
+
+          if (strcmp(entry, "fglrx") == 0)
+            {
+              retval = 1;
+              break;
+            }
+        }
+      fclose(fp);
+    }
+  return retval;
+}
+
 static void
 apply_crtc_assignments (MetaMonitorManager *manager,
                         MetaCrtcInfo      **crtcs,
@@ -1235,6 +1270,8 @@ apply_crtc_assignments (MetaMonitorManager *manager,
         }
     }
 
+  int fglrx_kernel_module_loaded = output_get_fglrx_kernel_module_loaded();
+
   for (i = 0; i < n_outputs; i++)
     {
       MetaOutputInfo *output_info = outputs[i];
@@ -1247,9 +1284,13 @@ apply_crtc_assignments (MetaMonitorManager *manager,
                                (XID)output_info->output->winsys_id);
         }
 
-      output_set_presentation_xrandr (manager_xrandr,
-                                      output_info->output,
-                                      output_info->is_presentation);
+      /* Don't call output_set_presentation_xrandr if fglrx/catalyst is used, because that causes a crash. */
+      if (fglrx_kernel_module_loaded != 1)
+        {
+          output_set_presentation_xrandr (manager_xrandr,
+                                          output_info->output,
+                                          output_info->is_presentation);
+        }
 
       if (output_get_supports_underscanning_xrandr (manager_xrandr, output_info->output))
         output_set_underscanning_xrandr (manager_xrandr,
