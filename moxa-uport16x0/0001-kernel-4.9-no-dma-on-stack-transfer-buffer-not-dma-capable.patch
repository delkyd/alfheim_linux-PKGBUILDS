--- driver/mxuport/mx-uport.c.orig	2014-10-30 03:05:36.000000000 -0400
+++ driver/mxuport/mx-uport.c	2017-08-08 07:58:00.133293227 -0400
@@ -2007,10 +2007,11 @@ static void mx_load_firmware(struct mxup
 	unsigned long txlen, fwsize, fwidx;
     unsigned long dev_ver, local_ver;
     unsigned char *fw_buf, *fw_tmp;
     unsigned char ver_buf[4];
 
+        printk("Moxa: Upgrading firmware\n");
 #if 1
     /*
      *  Send vendor request - Get firmware version of SDRAM
      */
     status = mx_recv_ctrl_urb(mxserial->serial->dev,
@@ -3260,20 +3261,24 @@ static int mx_recv_ctrl_urb (struct usb_
 				              __u16  index,
                               u8     *data,
                               int    size)
 {
 	int status;
+	u8 *pdatatmp=kmalloc(size,GFP_KERNEL); // we'll just assume this one works
+	memcpy(pdatatmp,data,size);
 
 	status = usb_control_msg (dev,
 	                          usb_rcvctrlpipe(dev, 0),
 				              request,
 				              (USB_DIR_IN | USB_TYPE_VENDOR | USB_RECIP_DEVICE),
 				              value,
 				              index,
-				              data,
+				              pdatatmp,
 				              size,
 				              HZ * USB_CTRL_GET_TIMEOUT);
+	memcpy(data,pdatatmp,size);
+	kfree(pdatatmp);
 
 	if (status < 0){
 		dbg("%s - send usb_control_msg failed. (%d)",
 		    __FUNCTION__, status);
 	    return status;
@@ -3298,19 +3303,23 @@ static int mx_send_ctrl_urb (struct usb_
 				__u16  index,
 				u8     *data,
 				int    size)
 {
 	int status;
+	u8 *pdatatmp=kmalloc(size,GFP_KERNEL); // we'll just assume this one works
+	memcpy(pdatatmp,data,size);
 	status = usb_control_msg (dev,
 	                          usb_sndctrlpipe(dev, 0),
 				              request,
 				              (USB_DIR_OUT | USB_TYPE_VENDOR | USB_RECIP_DEVICE),
 				              value,
 				              index,
-				              data,
+				              pdatatmp,
 				              size,
 				              HZ * USB_CTRL_SET_TIMEOUT);
+	memcpy(data,pdatatmp,size);
+	kfree(pdatatmp);
 	if (status < 0){
 		dbg("%s - send usb_control_msg failed. (%d)",
 		    __FUNCTION__, status);
 	    return status;
 	}
@@ -3439,14 +3448,18 @@ static int mx_write_bulkout_urb (struct
  */
 static int mx_get_string (struct usb_device *dev, int Id, char *string)
 {
 	struct usb_string_descriptor StringDesc;
 	struct usb_string_descriptor *pStringDesc;
+	struct usb_string_descriptor *rStringDesc = kmalloc (sizeof(*rStringDesc), GFP_KERNEL);
 
-	if (!usb_get_descriptor(dev, USB_DT_STRING, Id, &StringDesc, sizeof(StringDesc))) {
+	if (!usb_get_descriptor(dev, USB_DT_STRING, Id, rStringDesc, sizeof(*rStringDesc))) {
+		kfree(rStringDesc);
 		return 0;
 	}
+	memcpy(&StringDesc,rStringDesc,sizeof(*rStringDesc));
+	kfree(rStringDesc);
 
 	pStringDesc = kmalloc (StringDesc.bLength, GFP_KERNEL);
 
 	if (!pStringDesc) {
 		return 0;
