From 6613d20d4051effc782203c9c6d92962a3f66b5f Mon Sep 17 00:00:00 2001
From: cecilios <s.cecilio@gmail.com>
Date: Wed, 27 Jul 2016 22:01:55 +0200
Subject: [PATCH] More fixes for C++11

---
 src/app/lenmus_command_event_handler.cpp       |  2 +-
 src/app/lenmus_document_canvas.cpp             | 10 +++++-----
 src/app/lenmus_document_frame.cpp              |  2 +-
 src/app/lenmus_main_frame.cpp                  |  8 ++++----
 src/exercises/ctrols/lenmus_exercise_ctrol.cpp | 10 +++++-----
 5 files changed, 16 insertions(+), 16 deletions(-)

diff --git a/src/app/lenmus_command_event_handler.cpp b/src/app/lenmus_command_event_handler.cpp
index 278dcd3..01c3a61 100644
--- a/src/app/lenmus_command_event_handler.cpp
+++ b/src/app/lenmus_command_event_handler.cpp
@@ -398,7 +398,7 @@ void CommandEventHandler::process_command_event(SpEventCommand event)
         if (event->is_control_point_moved_event())
         {
             SpEventControlPointMoved pEv(
-                    boost::static_pointer_cast<EventControlPointMoved>(event) );
+                    static_pointer_cast<EventControlPointMoved>(event) );
             UPoint shift = pEv->get_shift();
             int iPoint = pEv->get_handler_index();
 //            int gmoType = pEv->get_gmo_type();
diff --git a/src/app/lenmus_document_canvas.cpp b/src/app/lenmus_document_canvas.cpp
index 9a7ce38..4b3e996 100644
--- a/src/app/lenmus_document_canvas.cpp
+++ b/src/app/lenmus_document_canvas.cpp
@@ -204,7 +204,7 @@ void DocumentWindow::play_score(SpEventInfo pEvent)
     {
         spInteractor->set_operating_mode(Interactor::k_mode_playback);
 
-        SpEventPlayScore pEv = boost::static_pointer_cast<EventPlayScore>(pEvent);
+        SpEventPlayScore pEv = static_pointer_cast<EventPlayScore>(pEvent);
         ImoScore* pScore = pEv->get_score();
         ScorePlayer* pPlayer  = m_appScope.get_score_player();
         PlayerGui* pPlayerGui = pEv->get_player();
@@ -266,7 +266,7 @@ void DocumentWindow::wrapper_on_click_event(void* pThis, SpEventInfo pEvent)
 void DocumentWindow::on_click_event(SpEventInfo pEvent)
 {
     //wxMessageBox("DocumentWindow::on_click_event");
-    SpEventMouse pEv( boost::static_pointer_cast<EventMouse>(pEvent) );
+    SpEventMouse pEv( static_pointer_cast<EventMouse>(pEvent) );
     if (!pEv->is_still_valid())
         return;
 
@@ -289,7 +289,7 @@ void DocumentWindow::wrapper_on_command_event(void* pThis, SpEventInfo pEvent)
 void DocumentWindow::on_command_event(SpEventInfo pEvent)
 {
 //    wxMessageBox("DocumentWindow::on_command_event");
-    SpEventCommand pEv( boost::static_pointer_cast<EventCommand>(pEvent) );
+    SpEventCommand pEv( static_pointer_cast<EventCommand>(pEvent) );
     if (!pEv->is_still_valid())
         return;
 
@@ -306,7 +306,7 @@ void DocumentWindow::on_command_event(SpEventInfo pEvent)
 void DocumentWindow::wrapper_update_window(void* pThis, SpEventInfo pEvent)
 {
     //wxLogMessage("callback: wrapper_update_window");
-    SpEventPaint pEv( boost::static_pointer_cast<EventPaint>(pEvent) );
+    SpEventPaint pEv( static_pointer_cast<EventPaint>(pEvent) );
     static_cast<DocumentWindow*>(pThis)->update_window(pEv->get_damaged_rectangle());
 }
 
@@ -819,7 +819,7 @@ void DocumentWindow::on_tool_selected_in_toolbox(ToolBoxToolSelectedEvent& event
 ////---------------------------------------------------------------------------------------
 //void DocumentWindow::on_hyperlink_event(SpEventInfo pEvent)
 //{
-//    SpEventMouse pEv = boost::static_pointer_cast<EventMouse>(pEvent);
+//    SpEventMouse pEv = static_pointer_cast<EventMouse>(pEvent);
 //    ImoLink* pLink = static_cast<ImoLink*>( pEv->get_imo_object() );
 //    string& url = pLink->get_url();
 //    wxString msg = wxString::Format("[DocumentWindow::on_hyperlink_event] link='%s'",
diff --git a/src/app/lenmus_document_frame.cpp b/src/app/lenmus_document_frame.cpp
index 5f1d33f..2d3ff57 100644
--- a/src/app/lenmus_document_frame.cpp
+++ b/src/app/lenmus_document_frame.cpp
@@ -359,7 +359,7 @@ void DocumentFrame::reload_document(const string& filename)
 //---------------------------------------------------------------------------------------
 void DocumentFrame::on_hyperlink_event(SpEventInfo pEvent)
 {
-    SpEventMouse pEv = boost::static_pointer_cast<EventMouse>(pEvent);
+    SpEventMouse pEv = static_pointer_cast<EventMouse>(pEvent);
     if (pEv->is_still_valid())
     {
         ImoLink* pLink = static_cast<ImoLink*>( pEv->get_imo_object() );
diff --git a/src/app/lenmus_main_frame.cpp b/src/app/lenmus_main_frame.cpp
index 1ab2188..7d670b4 100644
--- a/src/app/lenmus_main_frame.cpp
+++ b/src/app/lenmus_main_frame.cpp
@@ -1354,7 +1354,7 @@ void MainFrame::on_lomse_event(SpEventInfo pEvent)
             if (pCanvas)
             {
                 SpEventScoreHighlight pEv(
-                    boost::static_pointer_cast<EventScoreHighlight>(pEvent) );
+                    static_pointer_cast<EventScoreHighlight>(pEvent) );
                 lmScoreHighlightEvent event(pEv);
                 ::wxPostEvent(pCanvas, event);
             }
@@ -1365,7 +1365,7 @@ void MainFrame::on_lomse_event(SpEventInfo pEvent)
         {
             if (pCanvas)
             {
-                SpEventPlayScore pEv( boost::static_pointer_cast<EventPlayScore>(pEvent) );
+                SpEventPlayScore pEv( static_pointer_cast<EventPlayScore>(pEvent) );
                 lmEndOfPlaybackEvent event(pEv);
                 ::wxPostEvent(pCanvas, event);
             }
@@ -1388,7 +1388,7 @@ void MainFrame::on_lomse_event(SpEventInfo pEvent)
         {
             if (pCanvas)
             {
-                SpEventMouse pEv( boost::static_pointer_cast<EventMouse>(pEvent) );
+                SpEventMouse pEv( static_pointer_cast<EventMouse>(pEvent) );
                 lmShowContextualMenuEvent event(pEv);
                 ::wxPostEvent(pCanvas, event);
             }
@@ -1400,7 +1400,7 @@ void MainFrame::on_lomse_event(SpEventInfo pEvent)
         {
             if (is_toolbox_visible())
             {
-                SpEventUpdateUI pEv( boost::static_pointer_cast<EventUpdateUI>(pEvent) );
+                SpEventUpdateUI pEv( static_pointer_cast<EventUpdateUI>(pEvent) );
                 lmUpdateUIEvent event(pEv);
                 ::wxPostEvent(m_pToolBox, event);
             }
diff --git a/src/exercises/ctrols/lenmus_exercise_ctrol.cpp b/src/exercises/ctrols/lenmus_exercise_ctrol.cpp
index 125614d..02d4177 100644
--- a/src/exercises/ctrols/lenmus_exercise_ctrol.cpp
+++ b/src/exercises/ctrols/lenmus_exercise_ctrol.cpp
@@ -102,7 +102,7 @@ void EBookCtrol::handle_event(SpEventInfo pEvent)
 
     if (pEvent->is_on_click_event())
     {
-        SpEventMouse pEv( boost::static_pointer_cast<EventMouse>(pEvent) );
+        SpEventMouse pEv( static_pointer_cast<EventMouse>(pEvent) );
         if (pEv->is_still_valid())
         {
             ImoContentObj* pImo = dynamic_cast<ImoContentObj*>( pEv->get_source() );
@@ -512,7 +512,7 @@ void ExerciseCtrol::on_exercise_activated(void* pThis, SpEventInfo pEvent)
 {
     if (pEvent->is_on_click_event())
     {
-        SpEventMouse pEv( boost::static_pointer_cast<EventMouse>(pEvent) );
+        SpEventMouse pEv( static_pointer_cast<EventMouse>(pEvent) );
         if (pEv->is_still_valid())
         {
             ImoContentObj* pImo = dynamic_cast<ImoContentObj*>( pEv->get_source() );
@@ -569,7 +569,7 @@ void ExerciseCtrol::handle_event(SpEventInfo pEvent)
 {
     if (pEvent->is_mouse_in_event() || pEvent->is_mouse_out_event())
     {
-        SpEventMouse pEv( boost::static_pointer_cast<EventMouse>(pEvent) );
+        SpEventMouse pEv( static_pointer_cast<EventMouse>(pEvent) );
         if (!pEv->is_still_valid())
             return;
 
@@ -586,7 +586,7 @@ void ExerciseCtrol::handle_event(SpEventInfo pEvent)
 
     if (pEvent->is_on_click_event())
     {
-        SpEventMouse pEv( boost::static_pointer_cast<EventMouse>(pEvent) );
+        SpEventMouse pEv( static_pointer_cast<EventMouse>(pEvent) );
         if (!pEv->is_still_valid())
             return;
 
@@ -1866,7 +1866,7 @@ void FullEditorCtrol::create_problem_display_box(ImoContent* pWrapper, ImoStyle*
 //{
 //    if (pEvent->is_on_click_event())
 //    {
-//        SpEventMouse pEv( boost::static_pointer_cast<EventMouse>(pEvent) );
+//        SpEventMouse pEv( static_pointer_cast<EventMouse>(pEvent) );
 //        if (pEv->is_still_valid())
 //        {
 //            ImoContentObj* pImo = dynamic_cast<ImoContentObj*>( pEv->get_source() );
-- 
2.9.3

