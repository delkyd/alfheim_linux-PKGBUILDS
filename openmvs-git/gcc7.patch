diff --git a/libs/Common/Hash.h b/libs/Common/Hash.h
index 3128ac6..949cc49 100644
--- a/libs/Common/Hash.h
+++ b/libs/Common/Hash.h
@@ -243,7 +243,7 @@ public:
 	}
 	static inline Key HashKey(const uint8_t* data, UINT size) { return HashKeyFNV(data, size); }
 	static inline Key HashKey(LPCTSTR sz) { return HashKey((const uint8_t*)sz, _tcslen(sz)); }
-	static inline Key HashKey(const String& str) { return HashKey(str.c_str(), str.size()); }
+	static inline Key HashKey(const String& str) { return HashKey((const uint8_t*)str.c_str(), (UINT)str.size()); }
 
 	// Convenience functions
 	inline		 Type*	Find		(LPCTSTR		key)			{ return  Find  ( HashKey(key) );			}
diff --git a/libs/Common/Types.inl b/libs/Common/Types.inl
index 2a8faf0..5fe8224 100644
--- a/libs/Common/Types.inl
+++ b/libs/Common/Types.inl
@@ -2062,7 +2062,7 @@ void TImage<TYPE>::toGray(TImage<T>& out, int code, bool bNormalize) const
 		out.create(rows, cols);
 	ASSERT(cv::Mat::isContinuous());
 	ASSERT(out.cv::Mat::isContinuous());
-	const int scn(cv::Mat::channels());
+	int scn=cv::Mat::channels();
 	T* dst = out.cv::Mat::template ptr<T>();
 	T* const dstEnd = dst + out.area();
 	typedef typename cv::DataType<TYPE>::channel_type ST;
