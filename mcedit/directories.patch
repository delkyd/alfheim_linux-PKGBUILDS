# Just hardcoded path for everyday Arch use

--- directories.py.orig	2015-12-24 14:50:26.516671121 -0700
+++ directories.py	2015-12-24 14:50:43.963338308 -0700
@@ -83,7 +83,10 @@
     #     '''
     #
     # else:
-    dataDir = os.getcwdu()
+    if sys.platform.startswith("linux"):
+        dataDir = "/usr/share/mcedit"
+    else:
+        dataDir = os.getcwdu()
     if len(path) > 0:
         return os.path.join(dataDir, path)
     return dataDir

--- albow/resource.py.orig	2012-03-15 19:48:27.844000304 +0100
+++ albow/resource.py	2012-03-15 19:52:56.671251316 +0100
@@ -73,6 +73,8 @@
 
 def get_font(size, *names, **kwds):
     path = _resource_path("fonts", names, **kwds)
+    if sys.platform.startswith("linux"):
+        path = os.path.join("/usr/share/fonts/TTF", *names)
     key = (path, size)
     font = font_cache.get(key)
     if not font:

--- mcedit.py.orig	2015-08-12 07:12:26.000000000 -0600
+++ mcedit.py	2015-12-24 16:06:54.623474504 -0700
@@ -38,6 +38,8 @@
 #
 if sys.platform == "darwin":
     logfile = os.path.expanduser("~/Library/Logs/mcedit.log")
+elif sys.platform.startswith("linux"):
+    logfile = os.path.expanduser('~/.mcedit/mcedit.log')
 else:
     logfile = os.path.join(os.getcwdu(), logfile)
 fh = logging.FileHandler(logfile, mode="w")

--- pymclevel/materials.py.orig 2017-04-29 16:14:25.212312952 -0600
+++ pymclevel/materials.py      2017-04-29 16:14:32.882313180 -0600
@@ -66,7 +66,7 @@
                 b.stringID = "air"
             self.block_map[b.ID] = "minecraft:" + b.stringID
         
-        with open(os.path.join("pymclevel", definition_file)) as def_file:
+        with open(os.path.join("/usr/lib/mcedit/pymclevel", definition_file)) as def_file:
             self.blockstates = json.load(def_file)
             
         self.material_map[self._mats] = self
