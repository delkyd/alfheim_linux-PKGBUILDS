diff -Naupr ipt-netflow-2.2/ipt_NETFLOW.c ipt-netflow/ipt_NETFLOW.c
--- ipt-netflow-2.2/ipt_NETFLOW.c	2016-02-21 20:24:29.000000000 +0600
+++ ipt-netflow/ipt_NETFLOW.c	2016-07-23 11:52:31.719991895 +0600
@@ -209,6 +209,10 @@ MODULE_PARM_DESC(maxflows, "maximum numb
 static int peakflows = 0;
 static unsigned long peakflows_at; /* jfffies */
 
+static int engine_id = 0;
+module_param(engine_id, int, 0644);
+MODULE_PARM_DESC(engine_id, "Observation Domain ID");
+
 #ifdef ENABLE_AGGR
 #define AGGR_SIZE 1024
 static char aggregation_buf[AGGR_SIZE] = "";
@@ -271,7 +275,6 @@ static union {
 	struct netflow9_pdu v9;
 	struct ipfix_pdu ipfix;
 } pdu;
-static int engine_id = 0; /* Observation Domain */
 static __u8 *pdu_data_used;
 static __u8 *pdu_high_wm; /* high watermark */
 static struct flowset_data *pdu_flowset = NULL; /* current data flowset */
@@ -2532,7 +2535,7 @@ static void netflow_export_pdu_v5(void)
 	pdu.v5.ts_unsecs	= htonl(tv.tv_usec);
 	pdu.v5.seq		= htonl(pdu_seq);
 	//pdu.v5.eng_type	= 0;
-	pdu.v5.eng_id		= engine_id;
+	pdu.v5.eng_id		= (__u8)engine_id;
 #ifdef ENABLE_SAMPLER
 	pdu.v5.sampling		= htons(sampler_nf_v5());
 #endif
@@ -3904,7 +3907,13 @@ static int ethtool_drvinfo(unsigned char
 {
 	struct ethtool_drvinfo info = { 0 };
 	const struct ethtool_ops *ops = dev->ethtool_ops;
+#ifndef ETHTOOL_GLINKSETTINGS
 	struct ethtool_cmd ecmd;
+#define _KSETTINGS(x, y) (x)
+#else
+	struct ethtool_link_ksettings ekmd;
+#define _KSETTINGS(x, y) (y)
+#endif
 	int len = size;
 	int n;
 
@@ -3933,19 +3942,19 @@ static int ethtool_drvinfo(unsigned char
 	/* only get_settings for running devices to not trigger link negotiation */
 	if (dev->flags & IFF_UP &&
 	    dev->flags & IFF_RUNNING &&
-	    !__ethtool_get_settings(dev, &ecmd)) {
-		char *s, *p;
-
-		/* append basic parameters: speed and port */
-		switch (ethtool_cmd_speed(&ecmd)) {
-		case SPEED_10000: s = "10Gb"; break;
-		case SPEED_2500:  s = "2.5Gb"; break;
-		case SPEED_1000:  s = "1Gb"; break;
-		case SPEED_100:   s = "100Mb"; break;
-		case SPEED_10:    s = "10Mb"; break;
-		default:          s = "";
+	    !_KSETTINGS(__ethtool_get_settings(dev, &ecmd), __ethtool_get_link_ksettings(dev, &ekmd))) {
+		char *units, *p;
+		__u32 speed = _KSETTINGS(ethtool_cmd_speed(&ecmd), ekmd.base.speed);
+
+		if (speed == SPEED_UNKNOWN)
+			units = "";
+		else if (speed <= 1000)
+			units = "MbE";
+		else {
+			speed /= 1000;
+			units = "GbE";
 		}
-		switch (ecmd.port) {
+		switch (_KSETTINGS(ecmd.port, ekmd.base.port)) {
 		case PORT_TP:     p = "tp"; break;
 		case PORT_AUI:    p = "aui"; break;
 		case PORT_MII:    p = "mii"; break;
@@ -3956,7 +3965,7 @@ static int ethtool_drvinfo(unsigned char
 #endif
 		default:          p = "";
 		}
-		n = scnprintf(ptr, len, ",%s,%s", s, p);
+		n = scnprintf(ptr, len, ",%d%s,%s", speed, units, p);
 		len -= n;
 	}
 ret:
@@ -3964,6 +3973,7 @@ ret:
 		ops->complete(dev);
 	return size - len;
 }
+#undef _KSETTINGS
 
 static const unsigned short netdev_type[] =
 {ARPHRD_NETROM, ARPHRD_ETHER, ARPHRD_AX25,
diff -Naupr ipt-netflow-2.2/README ipt-netflow/README
--- ipt-netflow-2.2/README	2016-02-21 20:24:29.000000000 +0600
+++ ipt-netflow/README	2016-07-23 11:52:31.719991895 +0600
@@ -572,10 +572,21 @@ ipt_NETFLOW linux 2.6.x-4.x kernel modul
        desirable to combine it with packet processing on very highly loaded
        routers.
 
-       This option also could be changed at runtime with: 
+       This option could be changed at runtime with:
 
          # echo number > /sys/module/ipt_NETFLOW/parameters/exportcpu
 
+   engine_id=number
+     - Observation Domain ID (on IPFIX, Source Id on NetFlow v9, or Engine Id
+       on NetFlow v5) value to be exported. This may help your collector to
+       distinguish between multiple exporters. On Netflow v9 and IPFIX this
+       value is 32-bit on NetFlow v5 only 8 low bits are significant.
+       Default value is 0.
+
+       This option could be changed at runtime with:
+
+         # echo number > /sys/module/ipt_NETFLOW/parameters/engine_id
+
 
 ====================
 = HOW TO READ STAT =
