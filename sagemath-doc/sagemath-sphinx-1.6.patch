diff --git a/src/sage_setup/docbuild/__init__.py b/src/sage_setup/docbuild/__init__.py
index 4315663..8618b86 100644
--- a/src/sage_setup/docbuild/__init__.py
+++ b/src/sage_setup/docbuild/__init__.py
@@ -770,14 +770,16 @@ class ReferenceSubBuilder(DocBuilder):
         Returns the Sphinx environment for this project.
         """
         from sphinx.environment import BuildEnvironment
-        class Foo(object):
-            pass
-        config = Foo()
-        config.values = []
+        class FakeConfig(object):
+            values = tuple()
+        class FakeApp(object):
+            def __init__(self, dir):
+                self.srcdir = dir
+                self.config = FakeConfig()
 
         env_pickle = os.path.join(self._doctrees_dir(), 'environment.pickle')
         try:
-            env = BuildEnvironment.frompickle(self.dir, config, env_pickle)
+            env = BuildEnvironment.frompickle(env_pickle, FakeApp(self.dir))
             logger.debug("Opened Sphinx environment: %s", env_pickle)
             return env
         except IOError as err:
diff --git a/src/sage_setup/docbuild/ext/multidocs.py b/src/sage_setup/docbuild/ext/multidocs.py
index 0a5457a..371546d 100644
--- a/src/sage_setup/docbuild/ext/multidocs.py
+++ b/src/sage_setup/docbuild/ext/multidocs.py
@@ -86,9 +86,10 @@ def merge_environment(app, env):
                 env.metadata[ind] = md
             # merge the citations
             newcite = {}
-            for ind, (path, tag) in six.iteritems(docenv.domaindata["std"]["citations"]):
+            citations = docenv.domaindata["std"]["citations"]
+            for ind, (path, tag, lineno) in six.iteritems(docenv.domaindata["std"]["citations"]):
                 # TODO: Warn on conflicts
-                newcite[ind] = (fixpath(path), tag)
+                newcite[ind] = (fixpath(path), tag, lineno)
             env.domaindata["std"]["citations"].update(newcite)
             # merge the py:module indexes
             newmodules = {}
@@ -247,9 +248,10 @@ def fetch_citation(app, env):
         cache = cPickle.load(f)
     app.builder.info("done (%s citations)."%len(cache))
     cite = env.domaindata["std"]["citations"]
-    for ind, (path, tag) in six.iteritems(cache):
+    for ind, (path, tag, lineno) in six.iteritems(cache):
         if ind not in cite: # don't override local citation
-            cite[ind]=(os.path.join("..", path), tag)
+            cite[ind] = (os.path.join("..", path), tag, lineno)
+
 
 def init_subdoc(app):
     """
diff --git a/src/sage_setup/docbuild/sphinxbuild.py b/src/sage_setup/docbuild/sphinxbuild.py
index c68292c..1deac3d 100644
--- a/src/sage_setup/docbuild/sphinxbuild.py
+++ b/src/sage_setup/docbuild/sphinxbuild.py
@@ -55,6 +55,8 @@ class SageSphinxLogger(object):
             re.compile('WARNING: html_static_path entry .* does not exist'),
             re.compile('WARNING: while setting up extension'),
             re.compile('WARNING: Any IDs not assiend for figure node'),
+            re.compile('WARNING: .* is not referenced'),
+            re.compile('language "hu" not supported'),
             )
 
         # replacements: pairs of regular expressions and their replacements,
