--- SConstruct-orig	2017-07-06 21:08:39.461528997 +0200
+++ SConstruct	2017-07-06 21:08:22.381529305 +0200
@@ -37,22 +37,22 @@
 for pth in [F2PYpath,spath,os.path.normpath(os.path.join(spath,'..')),os.path.join(spath,'Scripts')]:
     if not pth: continue
     if sys.platform == "win32":
-        program = 'f2py.exe'
+        program = 'f2py2.exe'
     else:
-        program = 'f2py'
+        program = 'f2py2'
     f2pyprogram = os.path.join(pth,program)
     if is_exe(f2pyprogram):
         F2PYpath,F2PYprog = os.path.split(f2pyprogram)
         break
-    program = 'f2py.py'
+    program = 'f2py2.py'
     f2pyprogram = os.path.join(pth,program)
     if os.path.exists(f2pyprogram) and os.path.splitext(program)[1] == '.py':
         F2PYpath,F2PYprog = os.path.split(f2pyprogram)
         break
 else:
     print 'Note: Using f2py from path (hope that works!)'
-    F2PYpath = which_path('f2py')       # default path to f2py
-    F2PYprog = 'f2py'
+    F2PYpath = which_path('f2py2')       # default path to f2py
+    F2PYprog = 'f2py2'
 # check if we have a working path to f2py:
 f2pyprogram = os.path.normpath(os.path.join(F2PYpath,F2PYprog))
 if os.path.exists(f2pyprogram) and os.path.splitext(program)[1] == '.py':
@@ -169,16 +169,17 @@
 #   that on Windows it may be in the parent of the f2py location.
 # then run it to get info about the verision and the number of bits
 pythonpath = ''
-for program in ['python','../python']:
-    if sys.platform == "win32" and os.path.splitext(program)[1].lower() != '.exe':
-        program = program + '.exe'
-    pythonprogram = os.path.normpath(os.path.join(F2PYpath,program))
-    if is_exe(pythonprogram):
-        pythonpath = os.path.split(program)[0]
-        break
-else:
-    print 'python not found'
-    sys.exit()
+# for program in ['python2','../python2']:
+#     if sys.platform == "win32" and os.path.splitext(program)[1].lower() != '.exe':
+#         program = program + '.exe'
+#     pythonprogram = os.path.normpath(os.path.join(F2PYpath,program))
+#     if is_exe(pythonprogram):
+#         pythonpath = os.path.split(program)[0]
+#         break
+# else:
+#     print 'python not found'
+#     sys.exit()
+pythonprogram = '/usr/bin/python2'
 p = subprocess.Popen(pythonprogram, stdout=subprocess.PIPE, stdin=subprocess.PIPE)
 p.stdin.write("import sys,platform;print str(sys.version_info[0]);print str(sys.version_info[1]);print platform.architecture()[0];sys.exit()")
 p.stdin.close()
