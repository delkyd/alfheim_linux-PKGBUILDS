# $Id$ Maintainer: Dave Reisner <dreisner@archlinux.org> Maintainer: Tom Gundersen <teg@jklm.no>

pkgname=lib32-systemd
_pkgbasename=systemd
# latest commit on stable branch
_commit='27c7bc970d9e7ffe060688a8dd77b7747503a564'
# Bump this to latest major release for signed tag verification,
# the commit count is handled by pkgver() function.
pkgver=233.75
pkgrel=2
pkgdesc="system and service manager (32-bit)"
arch=('x86_64')
url="https://www.github.com/systemd/systemd"
license=('GPL2' 'LGPL2.1')
depends=('lib32-libgcrypt' 'lib32-xz' 'lib32-libcap' 'lib32-gcc-libs' 'systemd')
makedepends=('lib32-gcc-libs' 'gcc-multilib' 'lib32-libidn' 'lib32-glib2' 'intltool' 'gperf'
             'lib32-curl' 'lib32-bzip2' 'lib32-acl' 'git')
options=('strip')
source=("git://github.com/systemd/systemd-stable.git#commit=${_commit}"
        'git://github.com/systemd/systemd.git') # pull in for tags
md5sums=('SKIP'
         'SKIP')
validpgpkeys=(
  '63CDA1E5D3FC22B998D20DD6327F26951A015CC4'  # Lennart Poettering
)

_backports=(
  # build-sys: make RPM macros installation path configurable
  'ff2e33db54719bfe8feea833571652318c6d197c'
  # resolved: do not start LLMNR or mDNS stack when no network enables them
  '2c7ef56459bf6fe7761595585aa4eed5cd183f27^..2c7ef56459bf6fe7761595585aa4eed5cd183f27^2'
  # networkd: RFC compliant autonomous prefix handling (#5636)
  '6554550f35a7976f9110aff94743d3576d5f02dd'
  # core: do not print color console message about gc-ed jobs
  '047d7219fde661698d3487fc49e9878c61eefd77'
)

_reverts=(
  # core: store the invocation ID in the per-service keyring
  'b3415f5daef49642be3d5f417b8880c078420ff7'
  # core: run each system service with a fresh session keyring
  '74dd6b515fa968c5710b396a7664cac335e25ca8'
)

_validate_tag() {
  local success fingerprint trusted status tag=v${pkgver%.*}

  parse_gpg_statusfile /dev/stdin < <(git verify-tag --raw "$tag" 2>&1)

  if (( ! success )); then
    error 'failed to validate tag %s\n' "$tag"
    return 1
  fi

  if ! in_array "$fingerprint" "${validpgpkeys[@]}" && (( ! trusted )); then
    error 'unknown or untrusted public key: %s\n' "$fingerprint"
    return 1
  fi

  case $status in
    'expired')
      warning 'the signature has expired'
      ;;
    'expiredkey')
      warning 'the key has expired'
      ;;
  esac

  return 0
}

pkgver() {
  local version count

  cd "$_pkgbasename-stable"

  version="$(git describe --abbrev=0 --tags)"
  count="$(git rev-list --count ${version}..)"
  printf '%s.%s' "${version#v}" "${count}"
}

prepare() {
  cd "$_pkgbasename-stable"
  
  git remote add upstream ../systemd/
  git fetch --all

  _validate_tag || return

  local _commit
  for _commit in "${_backports[@]}"; do
    git cherry-pick -n "$_commit"
  done
  for _commit in "${_reverts[@]}"; do
    git revert -n "$_commit"
  done

  # nss-resolve: drop the internal fallback to libnss_dns
  git show '5486a31d287f26bcd7c0a4eb2abfa4c074b985f1' -- \
    'Makefile.am' 'src/nss-resolve/nss-resolve.c' | git apply --index
  
  # Resolved packet size (#6214) (FS#54619, CVE-2017-9445)
  git show '751ca3f1de316ca79b60001334dbdf54077e1d01' \
    'db848813bae4d28c524b3b6a7dad135e426659ce' \
    '88795538726a5bbfd9efc13d441cb05e1d7fc139' \
    '64a21fdaca7c93f1c30b21f6fdbd2261798b161a' \
    -- . ':!src/resolve/meson.build'  | git apply --index

  ./autogen.sh
}

build() {
  export CC="gcc -m32"
  export CXX="g++ -m32"
  export PKG_CONFIG_PATH="/usr/lib32/pkgconfig"

  cd "$_pkgbasename-stable"

  local timeservers=({0..3}.arch.pool.ntp.org)

  local configure_options=(
    --libexecdir=/usr/lib32
    --libdir=/usr/lib32
    --localstatedir=/var
    --sysconfdir=/etc

    --disable-audit
    --disable-tests
    --disable-ima
    --disable-seccomp
    --disable-pam
    --disable-kmod
    --disable-networkd
    --disable-blkid
    --disable-libiptc
    --disable-lz4
    --disable-manpages
    --disable-libcryptsetup
    --without-python

    --with-sysvinit-path=
    --with-sysvrcnd-path=
    --with-ntp-servers="${timeservers[*]}"
    --with-default-dnssec=no
    --with-dbuspolicydir=/usr/share/dbus-1/system.d
    --without-kill-user-processes
    --with-rpmmacrosdir=no
    # TODO(dreisner): consider changing this to unified
    --with-default-hierarchy=hybrid
  )

  ./configure "${configure_options[@]}"

  make
}

package() {
  cd "$_pkgbasename-stable"

  make DESTDIR="$pkgdir" install

  rm -rf "${pkgdir}"/{etc,var}
  rm -rf "${pkgdir}"/usr/{bin,include,lib,share}
}
