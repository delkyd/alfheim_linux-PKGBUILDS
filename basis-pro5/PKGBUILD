# Maintainer: Chris Severance aur.severach aATt spamgourmet dott com

# Todo: service for Pro/5 DataServer

# Basis bug: BLM is hard coded to use /usr/tmp (fixed herein)
# Basis bug: some Basis scripts have cosmetic errors (fixed herein)

# Build instructions:

# This PKGBUILD does not automatically download all files. Basis does not make
# all files available as direct links. It is not necessary to have a license
# to download, install, and run Pro/5. Without a license you get nag screens.

# At the Basis web site click Products, Downloads
# Choose a BASIS product: Pro/5
#   Platform: Linux
#   OS Level: Linux Kernel 2.6.17-1.2142_FC4+ AND glibc v2.3+ [Port 1045]
#   Revision: Latest or any
#   License Type: (*) Update existing software. (No license delivered.)
#     (Licensing will be handled during install. You may need to call Basis.)
#   Enter info... Download Product
#   Repeat for 64 bit: Linux Kernel v2.6+ AND glibc v2.3+ [Port 6045] - 64-bit
# Choose a BASIS product: Pro/5 Data Server
#   Repeat above for 1245 & 6245
# Place the 4 files in with PKGBUILD
# The BLM is downloaded automatically.

# If you already have license files, run "makepkg -oc" and place them
# in the appropriate z folders. This allows them to be built into the package
# for easy installs and upgrades. See below for files and folders.

# License concepts: (for those who aren't familiar with Macrovision FlexLM)

# The only product that requires a license file generated by Basis is the
# Basis License Manager (BLM). Every site must run at least one
# BLM server. A single BLM server on the same machine that runs Pro/5 is
# typical to get started. Developers may have a separate BLM server
# from production BLM servers.

# It is not necessary to have a functioning BLM server to try Pro/5. You can
# test suitability, functionality, run, extract data, and edit programs.
# Once your BLM server is licensed and running you can point your Pro/5
# installs to it and they will become fully functional without nag screens.

# While the BLM license is locked to the BLM server the HostID was generated
# on, BLM license checkout for Pro/5 instances are not machine locked,
# platform or OS specific. You can run Pro/5 on as many different machines
# and OS as you like. You can try other platforms to see if they are better
# suited to your needs. All you need is a BLM server with available licenses
# to point to. This PKGBUILD only handles Arch Linux.

# BLM License file security content may improve over time. Newer revisions
# of Pro/5 may require features not found in old license files or BLM servers.
# Contact Basis for an updated license file or for BLM server changes.
# Older revisions of Pro/5 are expected to run with newer licenses
# and BLM servers.

# Developer only licenses are available at a low yearly price.
# This is highly recommended for active developers.
# * You get get all features enabled. Good for testing to determine
#   whether a better licenses for production would be worthwhile.
# * You don't get kicked when the production BLM servers restart,
#   crash, or run out of licenses.
# * You don't consume one or more full licenses needed for users
#   on production systems.
# * If you develop on production systems you can use an altered
#   Pro/5 SERVER configuration so your runs use licenses from
#   the BLM serving your developers license.

# Install instructions

# TL;DR
# * Purchase license
# * install package
# * run standalone BLM
# * install package again
# * systemctl enable --now basis_lmgrd.service
# * configure Pro/5 installations to use BLM server

# There are two installers. "./install" is found in /usr/local/basis.
# The "BLM installer" is in the build folder. Some functionality is offered
# by both installers but only works properly in one of them.

# 1. Purchase a license from Basis or a reseller. You are sent:
#    A. Order confirmation
#    B. Instructions with Serial and Authorization.
#
# 2. Install the basis-pro5 package.
#
# 3. Run the BLM installer.
#  Original command: sudo java -jar BLM1600_09-29-2016_1212.jar
#  Use the provided helper script
#    sudo /usr/local/basis/blmgr/BLMrun
#
# Internet access will make registration and reregistration easier.
# The BLM installer automatically retrieves the license.
# Stop at step "Configure BLM Startup" which is done by the package

# The first time the license is activated, the activated license for your BLM
# can be returned in as little as two minutes. If the license has already been
# activated and you're changing the BLM server to another system, you may need
# to call Basis to have your activation reset. This may require an active SAM
# plan or a one time fee. A license request without an activation reset will
# get you a license but it's only good for 7 days as a emergency license. Check
# your expiry date and if it's 7 days, plan on some time on the phone to get
# the licensing straightened out before the nag screens come up again.

# Note: Some licenses require periodic reactivation and Internet access to the
# server. See http://documentation.basis.com/BASISHelp/WebHelp/inst/basis_license_types.htm
#
# 4. Install the basis-pro5 package again to replace some patched files
# overwritten by the BLM installer.
#
# 5. On all your Pro/5 installations run /usr/local/basis/install and select
# PRO5, SERVER
# and specify the IP or DNS name of your running BLM server.

_opt_blmgr_user='nobody' # default: root, the license manager should not be run as root
_opt_blmgr_group='nobody'
_opt_pro5_sql='pro5b'    # default: pro5b for non-sql, pro5s for sql
_opt_pro5_exe='bbx4'     # default: pro5, this link will be created in /usr/bin so
                         # Pro/5 is in the path. Select a name that minimizes the number of
                         # scripts you must modify.

# Up to 3 packages can be created
#   i686 for 32 bit systems
#   x86_64 for 64 bit systems
#   any for 64 bit systems running multilib
# They can all be made and ready for compatibility,
# performance, crash testing, or just carrying around for easy installs.

# To build and install package for native bitness:
# makepkg -sCcfi

# To build 32 bit package on 64 bit system
# makepkg -sCcf CARCH=i686

# To build 32 bit multilib package on 64 bit system
# makepkg -sCcf CARCH=any

# Once installed with an activated license you can enable and
# start the BLM service.

#   systemctl enable basis_lmgrd
#   systemctl start basis_lmgrd

# Try out your new Install in command line mode
# cd /usr/local/basis/pro5; unset BBTERM; ./pro5
# Try out your new Install in full screen mode
# cd /usr/local/basis/pro5; export BBTERM=T0; ./pro5

# Got READY> prompt with no nag screens, all good!
# Type BYE or RELEASE to exit

# So far as I know I've solved every one of the annoyances
# with the Basis install.
# If you have license nags check the logs at /var/log/basis/
# Check the status with
#   systemctl status basis_lmgrd.service

# The setup for a fully functioning Basis BBx Progression Pro/5 environment
# is extensive and not covered here.

# There are no man pages.

# Once installed you should add the utility folders ext, graphics, and std
# to your operating config.bbx. Old utilities should be removed if there are
# no modified versions. Many of the supplied utilities won't work unless all
# the utilities are the same version. To keep you from becoming dependant on
# custom changes to these files they are locked on install.
# If you want to customize an included utility, make
# a copy with a new name.

# Uninstall cleanup: rm -rf /var/log/basis /usr/local/basis

set -u
# _basefolder can be /usr/local or /usr/share
# Whatever is chosen must have the same number of characters as /usr/local
# Anything other than those two folders will require amending the install.
# An upgrade after a change here will generate 3 harmless chattr errors on install that are handled.
_basefolder='/usr/local'
_basedir="${_basefolder}/basis"
_servicefile='basis_lmgrd.service'
_logfolder='/var/log/basis'

pkgname='basis-pro5'
pkgver='16.00'
pkgrel='1'
pkgdesc='BASIS BBx Progression Pro/5 Business BASIC eXtended for BBj'
url='http://www.basis.com/'
license=('custom')
depends=('glibc' 'jdk' 'wget' 'gzip') # The Windows install recommends jdk over jre so we do too. OpenJDK does not work.
optdepends=('ncompress: Original compress for logs instead of gzip')
#backup=("${_basedir##/}/blmgr/Register.properties")
options=('!docs' 'emptydirs' '!strip') # strip is so poorly implemented that it changes the content and date on executables, even when there's nothing to strip! What were they thinking?
install="${pkgname}-install.sh"
#_verwatch=("${url}availability" '<td class="revision".*">\([0-9\.]\+\).*' 'f') # Almost works
#_blmjar='BLM1600_03-11-2016_1203.jar'
#_blmjar='BLM1600_04-11-2016_1107.jar'
_blmjar='BLM1600_09-29-2016_1212.jar'
_blmjarwebstart='BLM1600_08-10-2016_1012.jar' # 
source=("http://public.basis.com/blm/jar/${_blmjar}")
noextract=("${_blmjar}") # BBjWebstartBootstrap.jar is left out of BLM1600_09-29-2016_1212.jar
if :; then
  source+=("http://public.basis.com/blm/jar/${_blmjarwebstart}")
  noextract+=("${_blmjarwebstart}")
fi
_file='@::file://@' # convince the git submission that these files aren't on the web and don't need to be supplied
# 32-bit Rev 15.00 Linux Kernel 2.6.17-1.2142_FC4+ AND glibc v2.3+
# 10455yyyy.Z          = Pro/5            Port 1045
# 12455yyyy.Z          = Pro/5 DataServer Port 1245
for _src in '104551600.Z' '124551500.Z'; do
  source_i686+=("${_file//@/${_src}}")
done

sha256sums=('2471303c9ae4370e3f845461994b1e472df9f42a2e30e3aff3bf22065af1eef3'
            '9eec614a94cd2a1fefc321847bd0216c6a18d3386554c5c4cbf9dbb2689db8ee')
sha256sums_i686=('c2ff3b6949df2243bcec36fa6f82270563d66a6bfaa25338fdd8f0d6327c7d71'
                 '55052c4bcb1628017f051b18880de686c544144adf002dc2fdd1adc30b1e2e24')
sha256sums_x86_64=('cd45ce77bdf8c0929765b1cf29aa1e51679c30a5c0d01dae4aed6084675893eb'
                   'fe1114e619755bed70255e08bad2f9830887cf336bb5f013cc271314dc631604')

for _src in '604551600.Z' '624551500.Z'; do
  source_x86_64+=("${_file//@/${_src}}")
done
# 64-bit Rev 15.00 Linux Kernel v2.6+ and glibc v2.3+
# 60455xxxx.Z          = Pro/5            Port 6045
# 62455yyyy.Z          = Pro/5 DataServer Port 6245
unset _src
unset _file

if [ "${CARCH:-}" != 'any' ]; then
  arch=('i686' 'x86_64')
else
  # This allows us to build an i686, x86_64, and any package all with the same name so pacman thinks it's an upgrade.
  :;source+=("${source_i686[@]}")
  unset source_i686 source_x86_64
  :;sha256sums+=("${sha256sums_i686[@]}")
  unset sha256sums_i686 sha256sums_x86_64
  arch=('any')
  depends+=('lib32-glibc')
fi

# Approximate update frequency, yearly
# 10455 has some old versions attached to it
_vercheck() {
  curl -s -l "${url}availability" | grep -FA1 $'60455\n10455' | sed -e 's:<[^>]\+>::g' | grep '^[0-9]\+\.[0-9]\+$' | tr '.' ':' | LC_ALL=C sort -n | tr ':' '.' # 1>&2
}

# We can't modify .install but we can stop and force the user to fix it.
_install_check() {
  local _ckvar
  local _ckline
  for _ckvar in _opt_blmgr_user _opt_blmgr_group _basedir _basefolder _logfolder _servicefile; do
    _ckline="${_ckvar}='${!_ckvar}'"
    if ! grep -q "^${_ckline}"'$' "${startdir}/${install}"; then
      set +u
      msg "${install} must be fixed"
      echo "${_ckline}"
      false
    fi
  done
}

prepare() {
  set -u
  _install_check

  if [ "${#_basedir}" -ne 16 ] || [ "${#_basefolder}" -ne 10 ]; then
    echo 'Due to replacements within binary files the following strings must be the same length as the sample string'
    echo '_basedir same length as /usr/local/basis'
    echo '_basefolder same length as /usr/local'
    set +u
    false
  fi

  cd "${srcdir}"

  # unpack most of the new BLM, removing files customized by the BLM installer
  # for seamless reinstalls and upgrades.
  rm -rf 'blmgr' 'blmgr.tmp'
  mkdir 'blmgr.tmp'
  mkdir 'blmgr'
  cd 'blmgr.tmp'
  bsdtar -x -f "${srcdir}/${_blmjar}"
  if [ ! -s 'BBjWebstartBootstrap.jar' ]; then
    mkdir 'webstart.tmp'
    cd 'webstart.tmp'
    bsdtar -x -f "${srcdir}/${_blmjarwebstart}"
    mv 'BBjWebstartBootstrap.jar' ..
    cd ..
    rm -r 'webstart.tmp'
  fi
  rm -r 'com' 'org' 'META-INF' 'blminstall.xml'
  mkdir 'Archtemp'
  cd 'Archtemp'
  bsdtar -x -f '../package_blm.jar'
  declare -A _arch=([any]='32' [i686]='32' [x86_64]='64')
  mv 'unix'/* "2145/blm/${_arch[${CARCH}]}"/* "${srcdir}/blmgr"
  mv "${srcdir}/blmgr/bin/basisrunlm" "${srcdir}/blmgr"
  rm "${srcdir}/blmgr/bin/unixautostart"
  # mv "${srcdir}/blmgr/bin/admin" "${srcdir}/blmgr/bin/blmadmin"
  rm "${srcdir}/blmgr/bin/admin" # Java isn't using this version any more
  cd '..'
  rm -r 'Archtemp'
  mkdir 'Archtemp'
  cd 'Archtemp'
  bsdtar -x -f '../package_install.jar' 'lib/' 'unix'
  rm 'unix/images'/*.png 'unix/images/BasisB.xpm' 'unix'/*.directory 'unix'/*.menu 'unix/bin/.envsetup'
  local _df
  for _df in 'unix'/*/; do
    local _df2="${_df%/}"
    mv "${_df2}"/* "${srcdir}/blmgr/${_df2##*/}"
    rmdir "${_df2}"
  done
  rmdir 'unix'
  mv * "${srcdir}/blmgr"
  cd ..
  mv 'BBjWebstartBootstrap.jar' "${srcdir}/blmgr/lib"
  cd "${srcdir}/blmgr"
  bsdtar -x -f '../blmgr.tmp/package_native_2145.jar'
  rm -r 'META-INF'
  mkdir -p 'cfg' 'log' 'uninstall/com/basis/install/'
  cd "${srcdir}"
  rm -r 'blmgr.tmp'

  cd "${srcdir}"
  # The permissions on these files are horrendous
  local _file
  for _file in $(find . -type 'f'); do
    #echo "${_file}"
    local _pm_executable=0
    local _pm_type="$(file "${_file}")"
    local _pm_isdata="${_pm_type##*:}" # bash
    local _pm_isdata="$(echo ${_pm_isdata})" # Trim spaces

    case "${_pm_isdata}" in
      #'empty')         _pm_executable=0;;
      'ASCII text'*)    _pm_executable=0;;
      'HTML'*)          _pm_executable=0;;
      #*'tar archive'*) _pm_executable=0;;
      *'ELF '*)         _pm_executable=1;;
      #*'compressed data'*) _pm_executable=0;;
      *' batch '*)      _pm_executable=1;;
      *' source, '*)    _pm_executable=0;;
      'BBx '*)          _pm_executable=0;;
      *'POSIX shell script'*) _pm_executable=1;;
      *) echo "${_pm_isdata}: ${_file}";;
    esac

    if [ "${_pm_executable}" -eq 0 ]; then
      chmod 644 "${_file}"
    else
      chmod 755 "${_file}"
    fi
  done
  unset _file
  unset _pm_executable
  unset _pm_type
  unset _pm_isdata
  unset _pm_isdata

  find . -type 'd' -exec chmod 755 '{}' '+'
  chmod 644 'scripts'/* # these are all sourced
  chmod 755 'install' # only root can run install (the installer is fixed with an EUID check later)

  # these will be marked immutable during install to prevent root from modifying
  chmod 444 'pro5'/{ext,std,graphics}/*

  # Fix a few missing utility files with old names for easier upgrades.
  ln -s '_ask.utl' 'pro5/ext/_ask.pub'
  #ln -s '_copy.pub' 'pro5/std/_copy.utl'
  #ln -s '_ddguess.utl' 'pro5/ext/_guess'
  #ln -s '_msg.utl' 'pro5/ext/_msg'
  ln -s '_unerr.utl' 'pro5/ext/_unerr.pub'
  ln -s '_yesno.utl' 'pro5/ext/_yesno.pub'
  #ln -s '_warn.utl' 'pro5/ext/_warn'

  # Branding the EXE eliminates the need for the license path in an ENV variable
  # Branding didn't work in the Basis installer. Only two files contain BLM_LICLOC.
  # Branding causes a linker error if done in package when fakeroot is active.
  local _touches
  for _touches in 'pro5/pro5'{b,s}; do
    pro5/BLMbrand "${_touches}" "${_touches}.tmp" "${_basedir}/pro5"
    touch -r "${_touches}" "${_touches}.tmp"
    mv "${_touches}.tmp" "${_touches}"
  done
  unset _touches

  # Fix the date on every file modified
  local _badfiles
  readarray -t _badfiles <<<"$(grep -larF $'/usr/local/\n/usr/tmp')"
  local _badfile
  for _badfile in "${_badfiles[@]}"; do
    touch -r "${_badfile}" "${_badfile}.Archtmp"
  done

  # Fix a little sbin, within the protection of touch
  sed -e 's:/usr/sbin:/usr/bin:g' -i 'scripts/BasisFuns'

  # We are modifying binary files so replace strings must be exactly the same length.
  sed -e '# fix /usr/local' \
      -e "s:/usr/local/:${_basefolder}/:g" \
      -e '# fix /usr/tmp' \
      -e 's:/usr/tmp:/var/tmp:g' \
    -i "${_badfiles[@]}"

  for _badfile in "${_badfiles[@]}"; do
    touch -r "${_badfile}.Archtmp" "${_badfile}"
    rm "${_badfile}.Archtmp"
  done
  unset _badfiles
  unset _badfile

  set +u
}

package() {
  set -u
  cd "${srcdir}"

  install -d "${pkgdir}${_basedir}"

  local _basis_pkg
  for _basis_pkg in *; do
    if [ ! -h "${_basis_pkg}" ]; then
      mv "${_basis_pkg}" "${pkgdir}${_basedir}/"
    fi
  done
  unset _basis_pkg

  # The source folders are gone so let's move
  cd "${pkgdir}${_basedir}"

  # The BLMGR gets used a lot so it needs to be installed with a helper script
  install -pm644 "${srcdir}/${_blmjar}" -t 'blmgr'
  install -m744 <(cat << EOF
#!/usr/bin/bash

# This executes the BLM and makes the necessary changes to apply any new licenses

# Automatically added by ${pkgname}-${pkgver} PKGBUILD from Arch Linux AUR
# https://aur.archlinux.org/

cd "\$(dirname "\$0")" # guarantee that chown works on the right folder
set -u
shopt -s nullglob
list1=(*.lic*)

# Can't use openjdk even if present. Use the highest version of jdk
pushd '/usr/lib/jvm' > /dev/null
wantjdk=''
for jdk in java-*-jdk/; do
  jdk="\${jdk%/}"
  if [ -x "\${jdk}/bin/java" ]; then
    if [ -z "\${wantjdk}" ] || [ "\$(vercmp "\${jdk}" "\${wantjdk}")" -gt 0 ]; then
      wantjdk="\${jdk}"
    fi
  fi
done
popd > /dev/null
unset jdk

echo "Using jdk \${wantjdk}"
echo 'Exit when you see: Configure BLM Startup'

# findHome only works when basis_lmgrd is already running.
# This makes it work on the first run
cat > 'ps' << EOR
#!/bin/sh
echo '2 1 ./basis_lmgrd -c /usr/local/basis/blmgr'
EOR
chmod 755 'ps'
PATH="${_basedir}/blmgr/:\${PATH}" \
/usr/lib/jvm/\${wantjdk}/bin/java -jar '${_blmjar}' # -p '/usr/local/basis/blmgr/BLM/Install.properties'
rm 'ps'
chown -R '${_opt_blmgr_user}:${_opt_blmgr_group}' *
list2=(*.lic*)
if [ "\${#list1[@]}" -ne "\${#list2[@]}" ] && systemctl -q is-enabled '${_servicefile}'; then
  systemctl restart '${_servicefile}'
  echo 'License manager restarted'
fi
EOF
  ) 'blmgr/BLMrun'
  touch -r "${srcdir}/${_blmjar}" 'blmgr/BLMrun'

  # Provide a minimal configuration
  install -m644 <(cat << EOF
# Automatically added by ${pkgname}-${pkgver} PKGBUILD from Arch Linux AUR
# https://aur.archlinux.org/

ALIAS T0 /dev/tty xterm
prefix '${_basedir}/pro5/std/' '${_basedir}/pro5/ext/' '${_basedir}/pro5/graphics/'
EOF
) 'pro5/config.bbx'

  # Perform the BLM CREATE step, auto-Install the BasisRunLM
  local _outfile='scripts/BasisLicManager'
  cp -p "${_outfile}" "${_outfile}.Arch"
  sed -e '# disable all the pauses' \
      -e 's/ read / funcread /g' \
      -e '# fix a cosmetic script bug.' \
      -e 's/License Manager not found: ${lmgrdcom}/License Manager not found: \\${lmgrdcom}/g' \
    -i "${_outfile}.Arch"
cat >> "${_outfile}.Arch" << EOF
PrintFile() {
  :
  #echo "Print Stuff"
}
PrintPrompt() {
  :
  #echo "Prompt Stuff"
}
funcread() {
  :
  #echo "Read Stuff"
}
CreateRunLM "${pkgdir}${_basedir}/blmgr"
EOF
  sh -e -u "${_outfile}.Arch" >/dev/null
  rm "${_outfile}.Arch"

  # We had to add ${pkgdir} to get the install to put the file in the right place
  # now we remove the ${pkgdir} slop from the generated file
  sed -e "s:${pkgdir}/:/:g" \
      -e "# The systemd service doesn't work right unless you have hash bang on the front" \
      -e '1i #!/usr/bin/sh' \
      -e '# Place the log where logs belong. A logrotate is included.' \
      -e "s:${_basedir}/blmgr/log:${_logfolder}:g" \
    -i 'blmgr/BasisRunLM'
  touch -r "${srcdir}/${_blmjar}" 'blmgr/BasisRunLM'

  # the log must be world writable so we can run the manager under a non root user's account
  install -dm775 "${pkgdir}${_logfolder}"

  # disable BLM CREATE ADD START STOP. We do all this here in PKGBUILD.
  # CREATE won't work because they can't fix the hash bang problem fixed above.
  _outfile='scripts/BasisLicManager'
  if ! grep -ql 'Arch Linux' "${_outfile}"; then
    touch -r "${_outfile}" "${_outfile}.Arch"
    cat >> "${_outfile}" << EOF

# Automatically added by ${pkgname}-${pkgver} PKGBUILD from Arch Linux AUR
# https://aur.archlinux.org/

# The commands
# BLM CREATE ADD START STOP
# are not compatible with Arch Linux systemd.

# The Arch Linux PKGBUILD performs CREATE automatically.
# The Arch Linux PKGBUILD also creates systemd scripts (ADD) for
# START and STOP.

# The original functionality is disabled and substituted with
# instructionals for Arch Linux.

# These modifications do not bypass any license agreements (AcceptLic).

CreateRunLM ()
{
        echo "This function has already been completed by the Arch Linux installer."
        echo ""
        PrintPrompt ReturnToContinue
        read crlm_answer
}

InstallRunLM ()
{
  CreateRunLM
}

StartBLM ()
{
    echo "To start your license manager use:"
    echo "  systemctl start basis_lmgrd"
    echo ""
    echo "To have your license mananger start at every boot use:"
    echo "  systemctl enable basis_lmgrd"
    echo ""
    echo "To check the status of your license manager"
    echo "  systemctl status basis_lmgrd"
    echo "  less ${_logfolder}/blm.log"
    echo ""
        PrintPrompt ReturnToContinue
        read crlm_answer
}

StopBLM ()
{
    echo "To stop your license manager use:"
    echo "  systemctl stop basis_lmgrd"
    echo ""
    echo "To stop your license mananger from starting at every boot use:"
    echo "  systemctl disable basis_lmgrd"
    echo ""
    echo "To check the status of your license manager"
    echo "  systemctl status basis_lmgrd"
    echo "  less ${_logfolder}/blm.log"
    echo ""
        PrintPrompt ReturnToContinue
        read crlm_answer
}
EOF
    touch -r "${_outfile}.Arch" "${_outfile}"
    rm "${_outfile}.Arch"
  fi

  # systemd support
  install -Dm644 <(cat << EOF
[Unit]
# Automatically generated by ${pkgname}-${pkgver} PKGBUILD from Arch Linux AUR
# https://aur.archlinux.org/

Description=Basis License Manager for Pro/5 (BLM)
After=network.target

# Changing the user name here may require the following:
# rm -rf /var/tmp/{.flexlm,lockbasis}
# chmod root:group '${_logfolder}'
# chmod -R user:group '${_logfolder}'/*
[Service]
User=${_opt_blmgr_user}
Type=forking
ExecStart=${_basedir}/blmgr/BasisRunLM
ExecStop=${_basedir}/blmgr/lmutil lmdown -vendor basis
RemainAfterExit=yes

[Install]
WantedBy=multi-user.target
EOF
) "${pkgdir}/usr/lib/systemd/system/${_servicefile}"

  # Install a profile.d script. Branding makes this env variable unnecessary.
  # This variable requires a reboot or a relogin. Branding works immediately and
  # can't be broken by someone messing with profile scripts.
  if ! :; then
    local _licfile
    for _licfile in 'csh' 'sh'; do
      install -Dm755 <(cat << EOF
# Automatically generated by ${pkgname}-${pkgver} PKGBUILD from Arch Linux AUR
# https://aur.archlinux.org/

# This file tells Basis Pro/5 where to look for it's license file

LM_LICENSE_FILE="${_basedir}/pro5/BASIS.lic"
export LM_LICENSE_FILE
EOF
) "${pkgdir}/etc/profile.d/basis_lmgr.${_licfile}"
    done
    unset _licfile
  fi

  # Fix script error in 14.0,15.00 that makes the user wonder why the installer doesn't reread the phone
  touch -r 'scripts/BasisReg' 'scripts/BasisReg.Arch'
  sed -e 's:"Delivery"[)]    :"Phone")blr_phone="${blr_propval}" ;;\n"Delivery") :g' -i 'scripts/BasisReg'
  touch -r 'scripts/BasisReg.Arch' 'scripts/BasisReg'
  rm 'scripts/BasisReg.Arch'

  # turns out that submission by OTHER works perfectly so we don't need all these hacks.
  # it's here in case someone wants to see how this can be done. The new BLM doesn't
  # register with install at all and has it's own online submission system.
  if ! :; then
    # Make a workable email system for those who don't have sendmail
    # Enable automatic operation
    sed -e 's: blr_orighostid="\$: $blr_readreturn\nblr_orighostid="\$:g' -i 'scripts/BasisReg'

    sed -e 's: glr_mthd="\$1":\nif [ "$glr_tmpfolder" = "" ]; then\n  glr_tmpfolder=".."\nfi\nglr_mthd="$1":g' \
        -e 's:\.\./\${glr_tmpfile}:${glr_tmpfolder}/${glr_tmpfile}:g' \
      -i 'scripts/BasisFuns'

    sed -e 's: blm|BLM[)]: email|EMAIL) cd "${CurDir}/blmgr";blr_readreturn="return";BasisLicRegister;glr_tmpfolder="/tmp";GenLicRequest EMAIL;echo "";echo "Generated $glr_tmpfolder/$glr_tmpfile";echo "";echo "How to send\:";echo "Compose new message in your email.";echo "Disable HTML or Rich Text--send as text only";echo "Subject\: (blank subject)";echo "Paste $glr_tmpfile into body (not as attachment)";echo "Copy To\: address to your To\: field";echo "Remove To\: address and first blank line from email body";echo "Erase or disable any signatures";echo "Send Email";echo "rm $glr_tmpfolder/$glr_tmpfile" ;;\nblm|BLM):g' -i 'install'

    local _emailfile="${srcdir}/genemail.sh"
    rm -f "${_emailfile}"
    cat > "${_emailfile}" << EOF
#!/bin/sh
# Automatically generated by ${pkgname}-${pkgver} PKGBUILD from Arch Linux AUR
# https://aur.archlinux.org/
cd "\$(dirname "\$0"\)"
if [ ! -s 'blmgr/Register.properties' ]; then
  echo 'Please run the installer'
  echo 'BLM REG'
  echo 'Select EMAIL as your delivery preference'
else
  ./install email
fi
EOF

    install -Dpm755 "${_emailfile}" "${pkgdir}/${_basedir}"
    rm "${_emailfile}"
  fi

  # Root only for installer. Better than chmod 744.
  sed -e 's:^\(CurDir=\):if [ "${EUID}" -ne 0 ]; then\n  echo "Must be root"\n  exit 1\nfi\n\n \1:g' -i 'install'

  # select executable
  install -d "${pkgdir}/usr/bin"
  ln -s "${_basedir}/pro5/${_opt_pro5_sql}" "${pkgdir}/usr/bin/${_opt_pro5_exe}"

  # create bin links findable by the path
  local _pro5exe
  for _pro5exe in pro5{cpl,plot,lst}; do
    ln -s "${_basedir}/pro5/${_pro5exe}" "${pkgdir}/usr/bin/"
  done
  unset _pro5exe
  # a symlink is better than what the Basis installer does
  ln -s "${_opt_pro5_sql}" "${pkgdir}/${_basedir}/pro5/pro5"

  # Broken BLM writes files to /root
  install -dm750 "${pkgdir}/root"
  install -d "${pkgdir}/${_basedir}/blmgr/BLM"
  touch "${pkgdir}/${_basedir}/blmgr/BLM"/{Install.properties,install.log}
  ln -s "${_basedir}/blmgr" "${pkgdir}/root/BASIS"
  ln -s "${_basedir}/blmgr/BLM" "${pkgdir}/root/BLM"

  set +u
}

set +u
