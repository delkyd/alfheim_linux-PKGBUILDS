From 10d91c147968d2e4d63b99b5b0342624827f416f Mon Sep 17 00:00:00 2001
From: John MacFarlane <jgm@berkeley.edu>
Date: Sun, 26 Mar 2017 17:22:00 +0200
Subject: [PATCH] Use file-embed instead of hsb2hs to embed data files.

I think template haskell is robust enough now across platforms
that this will work.

Motivation: file-embed gives us better dependency tracking:  if a data
file changes, ghc/stack/cabal know to recompile the Data module.

This also removes hsb2hs as a build dependency.
---
 INSTALL.md                            |  3 ---
 Setup.hs                              | 28 ++--------------------------
 linux/Dockerfile                      |  1 -
 macos/make_macos_package.sh           |  3 ---
 pandoc.cabal                          |  2 +-
 src/Text/Pandoc/{Data.hsb => Data.hs} |  9 +++++----
 6 files changed, 8 insertions(+), 38 deletions(-)
 rename src/Text/Pandoc/{Data.hsb => Data.hs} (77%)

diff --git a/Setup.hs b/Setup.hs
index bc6651942..3f6bb2858 100644
--- a/Setup.hs
+++ b/Setup.hs
@@ -20,41 +20,17 @@ import Distribution.Simple
 import Distribution.Simple.PreProcess
 import Distribution.Simple.Setup (ConfigFlags(..), CopyFlags(..), fromFlag)
 import Distribution.PackageDescription (PackageDescription(..), FlagName(..))
-import Distribution.Simple.Utils ( rawSystemExitCode, findProgramVersion )
 import System.Exit
-import Distribution.Simple.Utils (info, notice, installOrdinaryFiles)
+import Distribution.Simple.Utils (notice, installOrdinaryFiles)
 import Distribution.Simple.Program (simpleProgram, Program(..))
 import Distribution.Simple.LocalBuildInfo
 import Control.Monad (when)

 main :: IO ()
 main = defaultMainWithHooks $ simpleUserHooks {
-      -- enable hsb2hs preprocessor for .hsb files
-      hookedPreProcessors = [ppBlobSuffixHandler]
-    , hookedPrograms = [(simpleProgram "hsb2hs"){
-                           programFindVersion = \verbosity fp ->
-                             findProgramVersion "--version" id verbosity fp }]
-    , postCopy = installManPage
+      postCopy = installManPage
     }

-ppBlobSuffixHandler :: PPSuffixHandler
-ppBlobSuffixHandler = ("hsb", \_ lbi ->
-  PreProcessor {
-    platformIndependent = True,
-    runPreProcessor = mkSimplePreProcessor $ \infile outfile verbosity ->
-      do let embedData = case lookup (FlagName "embed_data_files")
-                              (configConfigurationsFlags (configFlags lbi)) of
-                              Just True -> True
-                              _         -> False
-         when embedData $
-            do info verbosity $ "Preprocessing " ++ infile ++ " to " ++ outfile
-               ec <- rawSystemExitCode verbosity "hsb2hs"
-                          [infile, infile, outfile]
-               case ec of
-                    ExitSuccess   -> return ()
-                    ExitFailure _ -> error "hsb2hs is needed to build this program"
-  })
-
 installManPage :: Args -> CopyFlags
                -> PackageDescription -> LocalBuildInfo -> IO ()
 installManPage _ flags pkg lbi = do
--- a/pandoc.cabal
+++ b/pandoc.cabal
@@ -332,7 +332,7 @@ Library
      cpp-options:   -DHTTP_CLIENT
   if flag(embed_data_files)
      cpp-options:   -DEMBED_DATA_FILES
-     Build-Tools:   hsb2hs >= 0.3.1
+     build-depends: file-embed >= 0.0 && < 0.1
      other-modules: Text.Pandoc.Data
      if os(darwin)
         Build-Tools:   cpphs >= 1.19
